const { EmbedBuilder, codeBlock, Role, PermissionsBitField } = require('discord.js');
const { checkWhitelist, date } = require('../../../../Utils/Functions.js');
const channelTypes = { 2: 'Ses KanalÄ±', 0: 'YazÄ± KanalÄ±', 5: 'Duyuru KanalÄ±', 4: 'Kategori', 13: 'Sahne', 15: 'Forum' };
const PermissionFlagsTitles = {
  CreateInstantInvite: 'AnlÄ±k Davet OluÅŸtur',
  KickMembers: 'Ãœyeleri At',
  BanMembers: 'Ãœyeleri Yasakla',
  Administrator: 'YÃ¶netici',
  ManageChannels: 'KanallarÄ± YÃ¶net',
  ManageGuild: 'Sunucuyu YÃ¶net',
  AddReactions: 'Tepki Ekle',
  ViewAuditLog: 'Denetim KayÄ±tlarÄ±nÄ± GÃ¶rÃ¼ntÃ¼le',
  PrioritySpeaker: 'Ã–ncelikli KonuÅŸmacÄ±',
  Stream: 'CanlÄ± YayÄ±n',
  ViewChannel: 'KanalÄ± GÃ¶rÃ¼ntÃ¼le',
  SendMessages: 'Mesaj GÃ¶nder',
  SendTTSMessages: 'TTS MesajÄ± GÃ¶nder',
  ManageMessages: 'MesajlarÄ± YÃ¶net',
  EmbedLinks: 'BaÄŸlantÄ±larÄ± GÃ¶m',
  AttachFiles: 'Dosya YÃ¼kle',
  ReadMessageHistory: 'Mesaj GeÃ§miÅŸini Oku',
  MentionEveryone: 'Herkesi Belirt',
  UseExternalEmojis: 'DÄ±ÅŸ Emoji Kullan',
  ViewGuildInsights: 'Sunucu Bilgilerini GÃ¶r',
  Connect: 'Ses KanalÄ±na BaÄŸlan',
  Speak: 'Ses KanalÄ±nda KonuÅŸ',
  MuteMembers: 'Ãœyeleri Sessize Al',
  DeafenMembers: 'Ãœyeleri SaÄŸÄ±rla',
  MoveMembers: 'Ãœyeleri TaÅŸÄ±',
  UseVAD: 'Ses Aktivitesi AlgÄ±la',
  ChangeNickname: 'Takma Ä°smi DeÄŸiÅŸtir',
  ManageNicknames: 'Takma Ä°simleri YÃ¶net',
  ManageRoles: 'Rolleri YÃ¶net',
  ManageWebhooks: 'Webhook\'larÄ± YÃ¶net',
  ManageEmojisAndStickers: 'Emoji ve Ã‡Ä±kartmalarÄ± YÃ¶net',
  ManageGuildExpressions: 'Sunucu Ä°fadelerini YÃ¶net',
  UseApplicationCommands: 'Uygulama KomutlarÄ±nÄ± Kullan',
  RequestToSpeak: 'Sahne KanalÄ±nda KonuÅŸma Ä°steÄŸi',
  ManageEvents: 'Etkinlikleri YÃ¶net',
  ManageThreads: 'Konu BaÅŸlÄ±klarÄ±nÄ± YÃ¶net',
  CreatePublicThreads: 'Genel Konu BaÅŸlÄ±ÄŸÄ± OluÅŸtur',
  CreatePrivateThreads: 'Ã–zel Konu BaÅŸlÄ±ÄŸÄ± OluÅŸtur',
  UseExternalStickers: 'DÄ±ÅŸ Ã‡Ä±kartma Kullan',
  SendMessagesInThreads: 'Konu BaÅŸlÄ±ÄŸÄ±nda Mesaj GÃ¶nder',
  UseEmbeddedActivities: 'GÃ¶mÃ¼lÃ¼ Aktiviteleri Kullan',
  ModerateMembers: 'Ãœyeleri Sustur',
  ViewCreatorMonetizationAnalytics: 'Rol Abonelik Bilgilerini GÃ¶r',
  UseSoundboard: 'Ses Panosu Kullan',
  CreateGuildExpressions: 'Sunucu Ä°fadeleri OluÅŸtur',
  CreateEvents: 'Etkinlik OluÅŸtur',
  UseExternalSounds: 'DÄ±ÅŸ Sesler Kullan',
  SendVoiceMessages: 'Sesli Mesaj GÃ¶nder',
  SendPolls: 'Anket GÃ¶nder'
};

module.exports = async function channelOverwriteUpdate(client, guild, audit, member, changes) {
  const logChannel = guild.channels.cache.find(c => c.name === 'guard-log') || client.users.cache.get(guild.ownerId);
  const safeMode = await checkWhitelist(client, member, 'channel');
  const isRole = audit.target instanceof Role;

  const allowChange = changes.find((c) => c.key === 'allow');
  const newAllowValue = allowChange?.new;

  const denyChange = changes.find((c) => c.key === 'deny');
  const newDenyValue = denyChange?.new;

  let allowedPermissions = [];
  let deniedPermissions = [];

  if (newAllowValue && newAllowValue !== '0') {
    try {
      const bigIntValue = BigInt(newAllowValue);
      allowedPermissions = new PermissionsBitField(bigIntValue).toArray();
    } catch (error) { }
  }

  if (newDenyValue && newDenyValue !== '0') {
    try {
      const bigIntValue = BigInt(newDenyValue);
      deniedPermissions = new PermissionsBitField(bigIntValue).toArray();
    } catch (error) { }
  }

  if (logChannel) logChannel.send({
    embeds: [
      new EmbedBuilder({
        title: 'Kanal Yetkisi GÃ¼ncellendi!',
        description: [
          codeBlock('yaml', [
            `â†’ Ä°ÅŸlem Yapan KiÅŸi: ${member?.user.username} (${member?.id})`,
            `â†’ GÃ¼venlik Durumu: ${safeMode ? 'ðŸŸ¢ GÃ¼venli Listede' : 'ðŸ”´ GÃ¼venli DeÄŸil'}`,
            `â†’ Ä°ÅŸlem YapÄ±lan Kanal: ${audit.target.name} (${audit.target.id})`,
            `â†’ Kanal Tipi: ${channelTypes[audit.target.type]}`,
            `â†’ Ä°ÅŸlem Tarihi: ${date(Date.now())}`,
            `â†’ GÃ¼venlik Durumu: ${safeMode?.whitelistType || 'GÃ¼venli DeÄŸil'}`,
            `â†’ Limit Durumu: ${safeMode?.limitType || 'Limit AÅŸÄ±ldÄ±'} [${safeMode?.limitRatio || 'CezalandÄ±rÄ±ldÄ±'}]`,
          ].join('\n')),
          codeBlock('ansi', isRole ?
            [
              '[2;30m# Rol Bilgileri[0m',
              `[2;37mâ†’ Ismi: ${audit.target.name}[0m`,
              `[2;37mâ†’ ID: ${audit.target.id}[0m`,
              `[2;37mâ†’ Roldeki Ãœye SayÄ±sÄ±: ${audit.target.members.size}[0m`
            ].join('\n')
            :
            [
              '[2;30m# Ãœye Bilgileri[0m',
              `[2;37mâ†’ Ismi: ${audit.target.user.username}[0m`,
              `[2;37mâ†’ ID: ${audit.target.id}[0m`,
              `[2;37mâ†’ Hesap OluÅŸturulma Tarihi: ${date(audit.target.user.createdTimestamp)}[0m`,
              `[2;37mâ†’ Sunucuya KatÄ±lma Tarihi: ${date(audit.target.joinedTimestamp)}[0m`,
            ].join('\n')),
          codeBlock('ansi', [
            '[2;30m# AÃ§Ä±k Yetkileri[0m',
            allowedPermissions.map((key) => `[2;32m${PermissionFlagsTitles[key]}[0m`).list(),
            '[2;30m# KapalÄ± Yetkileri[0m',
            deniedPermissions.map((key) => `[2;31m${PermissionFlagsTitles[key]}[0m`).list(),
          ].join('\n')),
        ].join('\n'),
      })
    ]
  })
};